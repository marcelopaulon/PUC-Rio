1. Escreva a função (||) ("ou" lógico).
(||) :: Bool -> Bool -> Bool
|| True _ = True
|| False x = x

2. Prove que sua função é associativa:
a || (b || c) = (a || b) || c


3. Sua função é comutativa?
a || b = b || a

4. Escreva uma função que verifique se um valor pertence a uma dada lista:
find :: (Eq a) => a -> [a] -> Bool
find _ [] = False
find a (x:xs) = if x == a then True else find a xs

5. Prove que sua função satisfaz a equação abaixo:
find x (ys ++ zs) = find x yx || find x zs


6. Escreva uma função para ordenar uma lista:
sort :: (Ord a) => [a] -> [a]
sort [] = []
sort (x:xs) = sort (filter ((>=) x) xs) ++ (x:(sort (filter ((<) x) xs)))
